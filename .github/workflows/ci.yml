name: Build LaTeX documents
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
      all_files: ${{ steps.set.outputs.all_files }}
      changed_files: ${{ steps.set.outputs.all_files }}
      unchanged_files: ${{ steps.set.outputs.unchanged_files }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: json
          filters: |
            changed: '!(env).tex'
      - id: set
        run: |
          ALL_FILES=$(find . -type f -name "*.tex" -not -name "env.tex" | xargs -n1 basename | sed 's/.tex//g' | jq -R -s -c 'split("\n")[:-1]')
          echo "::set-output name=all_files::${ALL_FILES}"
          printf "Setting all_files=${ALL_FILES}\n"
          CHANGED_FILES=$(printf ${{ toJSON(steps.filter.outputs.changed_files) }} | sed 's/.tex//g' | jq -c '.[] |= .')
          echo "::set-output name=changed_files::${CHANGED_FILES}"
          printf "Setting changed_files=${CHANGED_FILES}\n"
          UNCHANGED_FILES=$(jq -n -c --argjson all_files ${ALL_FILES} --argjson changed_files ${CHANGED_FILES} '$all_files-$changed_files')
          echo "::set-output name=unchanged_files::${UNCHANGED_FILES}"
          printf "Setting unchanged_files=${UNCHANGED_FILES}\n"

  build_latex:
    needs: [changes]
    runs-on: ubuntu-latest
    if: needs.changes.outputs.changed == 'true'
    strategy:
      matrix:
        document: ${{ fromJSON(needs.changes.outputs.changed_files) }}

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Inject environment variables
        run: |
          sed -i env.tex -e "s/GITHUBCOMMITHASH/${GITHUB_SHA:0:6}/g"
          sed -i env.tex -e "s/GITHUBRUNNUMBER/${GITHUB_RUN_ID}/g"
          cat env.tex

      - name: Compile LaTeX document
        if: ${{ contains(needs.changes.outputs.changed_files, matrix.document) }}
        uses: xu-cheng/latex-action@v2
        with:
          root_file: ${{ matrix.document }}.tex

      - name: Compress LaTeX document
        if: ${{ contains(needs.changes.outputs.changed_files, matrix.document) }}
        run: |
          sudo apt update
          sudo apt install ghostscript -y
          gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/printer -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf ${{ matrix.document }}.pdf
          du -sh *.pdf
          mv output.pdf ${{ matrix.document }}.pdf

      - name: Upload document
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.document }}
          path: ${{ matrix.document }}.pdf

  use_cache:
    needs: [changes]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        document: ${{ fromJSON(needs.changes.outputs.unchanged_files) }}

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Download previously built document
        run: |
          wget https://kratsg.github.io/faculty-statements/${{ matrix.document }}.pdf -O ${{ matrix.document }}.pdf

      - name: Upload document
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.document }}
          path: ${{ matrix.document }}.pdf

  prepare_website:
    runs-on: ubuntu-latest
    needs: [build_latex, use_cache]
    if: ${{ always() && !cancelled() }}
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v1

      - name: Download documents
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: List artifacts
        run: ls -R
        working-directory: artifacts

      - name: Move to deploy directory
        run: |
          find artifacts -name "*.pdf" -print0 | xargs -0 -I file mv "file" deploy/

      - name: List documents
        run: ls -R
        working-directory: deploy

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: deploy/

  deploy:
    if: (github.ref == 'refs/heads/main') && (${{ always() && !cancelled() }})
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: prepare_website
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
